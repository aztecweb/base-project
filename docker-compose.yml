# Development project infrastructure generated over the Docker
version: "3"

services:
  wp:
    build:
      context: ./app/docker/wp-dev
    volumes:
      - .:/app
    env_file:
       - ./app/env/wp.env
       - ./app/env/app.env
    depends_on:
      - db

  # Image for install and update project PHP packages.
  composer:
    image: composer
    volumes:
      - .:/app
      # Map local user Composer directory with container for cache packages
      - ~/.cache/composer:/tmp/cache

  # Database image to run the mysql
  db:
    image: mariadb:10.3
    ports:
      - "3306:3306"
    volumes:
       - ./database:/var/lib/mysql
       - ./app/initdb:/docker-entrypoint-initdb.d
    env_file:
       - ./app/env/mysql.env

  # Run the applicatiion over HTTP on localhost:8080
  server:
    command: wp server --host=0.0.0.0
    build:
      context: ./app/docker/wp-dev
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    env_file:
       - ./app/env/wp.env
       - ./app/env/xdebug.env
    depends_on:
      - db
      - smtp

  # Node 8.2 with NPM/Yarn
  node:
    build:
      context: ./app/docker/node
    env_file:
       - ./app/env/app.env
    volumes:
      - .:/app

  # Watch changes in the project and update the files local server
  watch:
    command: yarn run dev
    build:
      context: ./app/docker/node
    ports:
      - "35729:35729"
    volumes:
      - .:/app

  # Test SMTP server
  smtp:
    image: schickling/mailcatcher
    restart: always
    ports:
      - "1025:1025"
      - "1080:1080"
    environment:
      MAILCATCHER_PORT: 1025

  # Run bash scripts
  bash:
    build:
      context: ./app/docker/bash
    volumes:
      - .:/app
    env_file:
       - ./app/env/app.env
